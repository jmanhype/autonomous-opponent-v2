name: VSM-Enhanced CI/CD Pipeline with Claude Integration (Fixed)

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      deployment_override:
        description: 'Force deployment regardless of S5 decision'
        required: false
        type: boolean
        default: false

env:
  MIX_ENV: test
  ELIXIR_VERSION: '1.14'
  OTP_VERSION: '25'

permissions:
  contents: read
  pull-requests: write
  issues: write
  actions: read

jobs:
  # S4 - Intelligence Analysis
  analyze-claude-request:
    name: S4 - Analyze Claude Request
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude')) ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.body, '@claude'))
    outputs:
      needs_claude: ${{ steps.analyze.outputs.needs_claude }}
      task_type: ${{ steps.analyze.outputs.task_type }}
    
    steps:
    - name: Extract and Analyze Claude Request
      id: analyze
      run: |
        echo "::notice::S4 Intelligence - Analyzing Claude request"
        
        # Extract the relevant body text safely
        if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
          # Use base64 encoding to safely handle special characters
          BODY_ENCODED=$(echo "${{ github.event.comment.body }}" | base64 -w 0)
        elif [[ "${{ github.event_name }}" == "pull_request_review_comment" ]]; then
          BODY_ENCODED=$(echo "${{ github.event.comment.body }}" | base64 -w 0)
        elif [[ "${{ github.event_name }}" == "issues" ]]; then
          BODY_ENCODED=$(echo "${{ github.event.issue.body }}" | base64 -w 0)
        elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
          BODY_ENCODED=$(echo "${{ github.event.pull_request.body }}" | base64 -w 0)
        fi
        
        # Decode for analysis
        BODY=$(echo "$BODY_ENCODED" | base64 -d)
        
        # Set output
        echo "needs_claude=true" >> $GITHUB_OUTPUT
        
        # Analyze request type
        if echo "$BODY" | grep -qi "review\|analyze\|explain\|describe"; then
          echo "task_type=review" >> $GITHUB_OUTPUT
          echo "::notice::S4 - Detected review request"
        elif echo "$BODY" | grep -qi "implement\|create\|add\|build"; then
          echo "task_type=implementation" >> $GITHUB_OUTPUT
          echo "::notice::S4 - Detected implementation request"
        elif echo "$BODY" | grep -qi "fix\|debug\|solve\|error"; then
          echo "task_type=fix" >> $GITHUB_OUTPUT
          echo "::notice::S4 - Detected fix request"
        elif echo "$BODY" | grep -qi "refactor\|optimize\|improve"; then
          echo "task_type=refactor" >> $GITHUB_OUTPUT
          echo "::notice::S4 - Detected refactor request"
        else
          echo "task_type=general" >> $GITHUB_OUTPUT
          echo "::notice::S4 - General Claude request"
        fi